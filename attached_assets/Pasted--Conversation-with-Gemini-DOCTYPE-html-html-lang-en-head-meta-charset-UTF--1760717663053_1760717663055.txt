
Conversation with Gemini
<!DOCTYPE html>

<html lang="en">

<head>

    <meta charset="UTF-8">

    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <title>AI ANTONIOS INTELIGENCE</title>

    <script src="https://cdn.tailwindcss.com"></script>

    <link href="https://vjs.zencdn.net/8.10.0/video-js.css" rel="stylesheet" />

    <script src="https://vjs.zencdn.net/8.10.0/video.min.js"></script>

    <style>

        @import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;600&display=swap');

        body {

            font-family: 'Inter', sans-serif;

            background-color: #1f1b0a; /* Dark gold/brown background */

            color: #e0e0e0;

            overflow: hidden; /* Prevent body scroll */

            display: flex;

        }

        .sidebar {

            background-color: rgba(60, 50, 20, 0.5); /* Semi-transparent background */

            backdrop-filter: blur(10px);

            width: 150px; /* Smaller default width */

            height: 100vh;

            overflow-y: auto;

            padding: 1rem;

            border-left: 2px solid #a67c00;

            position: fixed;

            right: 0;

            top: 0;

            z-index: 10;

            transition: width 0.3s ease-in-out;

        }

        .sidebar:hover {

            width: 450px; /* Expand on hover */

        }

        .card {

            background-color: rgba(80, 70, 30, 0.7); /* Semi-transparent card */

            border-radius: 1rem;

            padding: 1rem;

            margin-top: 1rem;

            box-shadow: inset 0 2px 8px rgba(0, 0, 0, 0.2);

            border: 1px solid #b58c00;

        }

        input, button, select {

            background-color: #3d3419;

            border: 1px solid #a67c00;

            color: #e0e0e0;

            padding: 0.75rem 1rem;

            border-radius: 0.5rem;

            margin: 0.5rem 0;

            width: 100%;

            transition: all 0.3s ease;

        }

        input:focus, button:focus, select:focus {

            outline: none;

            border-color: #ffc400;

            box-shadow: 0 0 0 3px rgba(255, 196, 0, 0.5);

        }

        button {

            cursor: pointer;

            background: linear-gradient(45deg, #ffc400, #e6b800);

            border: none;

            color: #1f1b0a;

        }

        button:hover {

            opacity: 0.9;

            transform: translateY(-2px);

        }

        .video-js {

            margin: 0 auto;

            border-radius: 1rem;

            overflow: hidden;

            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);

            border: 2px solid #b58c00;

        }

        .avatar {

            width: 150px;

            height: 150px;

            margin: 0.5rem;

            border-radius: 50%;

            object-fit: cover;

            border: 3px solid #e6b800;

            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);

        }

        .file-upload-container {

            border: 2px dashed #a67c00;

            border-radius: 1rem;

            padding: 1rem;

            margin-top: 1rem;

            display: flex;

            flex-direction: column;

            align-items: center;

        }

        .file-upload-container label {

            cursor: pointer;

            background-color: #a67c00;

            color: white;

            padding: 0.5rem 1rem;

            border-radius: 0.5rem;

            transition: background-color 0.3s ease;

        }

        .file-upload-container label:hover {

            background-color: #ffc400;

        }

        .hidden {

            display: none;

        }

        .message-box {

            position: fixed;

            top: 50%;

            left: 50%;

            transform: translate(-50%, -50%);

            background-color: #1e1e3f;

            color: white;

            padding: 2rem;

            border-radius: 1rem;

            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5);

            z-index: 1000;

            display: none;

            text-align: center;

        }

        .chat-container {

            background-color: #2b2b2b;

            border-radius: 1rem;

            height: 400px;

            overflow-y: scroll;

            padding: 1rem;

            display: flex;

            flex-direction: column;

            gap: 1rem;

        }

        .chat-message {

            max-width: 80%;

            padding: 0.75rem;

            border-radius: 0.75rem;

                        display: flex;

            align-items: center;

        }

        .user-message {

            background-color: #8c6f1a;

            align-self: flex-end;

            text-align: right;

        }

        .ai-message {

            background-color: #4f4520;

            align-self: flex-start;

            text-align: left;

        }

        .zodiac-container {

            position: fixed;

            top: 0;

            left: 0;

            width: 100%;

            height: 100%;

            display: flex;

            justify-content: center;

            align-items: center;

            background-color: #1f1b0a;

            overflow: hidden;

            z-index: -1;

        }

        .zodiac-container video {

            width: 100%;

            height: 100%;

            object-fit: cover;

        }

        .good-d-girl-status {

            background-color: #3d3419;

            border-radius: 1rem;

            padding: 1.5rem;

            margin-top: 1.5rem;

            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);

            border: 1px solid #a67c00;

            display: flex;

            flex-direction: column;

            align-items: center;

        }

        .good-d-girl-status .avatar {

            border-color: #e6b800;

            filter: grayscale(100%);

        }

        .good-d-girl-status.approved .avatar {

            border-color: #ffc400;

            filter: none;

        }

        .badge {

            display: inline-block;

            padding: 0.25rem 0.75rem;

            border-radius: 9999px;

            font-size: 0.75rem;

            font-weight: bold;

            margin-top: 0.5rem;

        }

        .status-waiting { background-color: #e6b800; color: black; }

        .status-approved { background-color: #ffc400; color: black; }

    </style>

</head>

<body>



    <!-- Full-screen video background -->

    <div id="video-background" class="zodiac-container">

        <video id="localVideo" autoplay playsinline></video>

    </div>



    <!-- Main content container as an overlay sidebar -->

    <main class="sidebar">

        <div id="app-content">

            <p id="prompt-message" class="text-xl font-bold mb-4 text-center">Please approve camera and microphone permissions to begin.</p>

           

            <div class="flex flex-wrap items-start justify-center gap-6 mb-6">

                <div class="flex flex-col items-center">

                    <img id="user-avatar" class="avatar" src="https://placehold.co/150x150/5a4b8a/ffffff?text=Pisces+Ghost" alt="Pisces Ghost's Avatar">

                    <p class="mt-2 text-xl font-bold" id="user-name-display">Pisces Ghost</p>

                    <p class="text-sm text-gray-400" id="zodiac-sign-display">Zodiac Sign: Pisces Ghost</p>

                    <button id="generate-avatar-btn" class="text-sm mt-2 p-2 rounded-lg bg-purple-600 hover:bg-purple-700">✨ Generate New Look</button>

                </div>

                <div class="flex flex-col items-center">

                    <img id="good-d-girl-avatar" class="avatar" src="https://placehold.co/150x150/7c3aed/ffffff?text=GoodDGirl" alt="GoodDGirl's Avatar">

                    <p class="mt-2 text-xl font-bold">GoodDGirl</p>

                    <p class="text-sm text-gray-400">The First Lady</p>

                </div>

                <div class="flex flex-col items-center">

                    <img id="producer-avatar" class="avatar" src="https://placehold.co/150x150/a67c00/ffffff?text=Producer" alt="Producer's Avatar">

                    <p class="mt-2 text-xl font-bold">Ray D Ent Antonio Roschelle Yarbough</p>

                    <p class="text-sm text-gray-400">The Producer</p>

                </div>

            </div>

            <p class="text-xs text-gray-500 my-2">Your User ID: <span id="user-id-display" class="font-mono text-xs"></span></p>



            <!-- Zodiac Signs Section -->

            <div id="zodiac-section" class="card mt-6">

                <h2 class="text-2xl font-bold mb-4 text-center">The Zodiac Council</h2>

                <div class="grid grid-cols-3 sm:grid-cols-4 gap-4 text-center">

                    <!-- Aries -->

                    <div class="flex flex-col items-center relative" data-sign="aries">

                        <img src="https://placehold.co/100x100/ff4500/ffffff?text=Aries" alt="Aries" class="avatar w-20 h-20">

                        <p class="mt-2 font-semibold text-sm">Aries</p>

                        <button class="edit-zodiac-btn absolute top-0 right-0 bg-gray-700 p-1 rounded-full text-xs opacity-50 hover:opacity-100 transition-opacity">✏️</button>

                    </div>

                    <!-- Taurus -->

                    <div class="flex flex-col items-center relative" data-sign="taurus">

                        <img src="https://placehold.co/100x100/228B22/ffffff?text=Taurus" alt="Taurus" class="avatar w-20 h-20">

                        <p class="mt-2 font-semibold text-sm">Taurus</p>

                        <button class="edit-zodiac-btn absolute top-0 right-0 bg-gray-700 p-1 rounded-full text-xs opacity-50 hover:opacity-100 transition-opacity">✏️</button>

                    </div>

                    <!-- Gemini -->

                    <div class="flex flex-col items-center relative" data-sign="gemini">

                        <img src="https://placehold.co/100x100/ffd700/ffffff?text=Gemini" alt="Gemini" class="avatar w-20 h-20">

                        <p class="mt-2 font-semibold text-sm">Gemini</p>

                        <button class="edit-zodiac-btn absolute top-0 right-0 bg-gray-700 p-1 rounded-full text-xs opacity-50 hover:opacity-100 transition-opacity">✏️</button>

                    </div>

                    <!-- Cancer -->

                    <div class="flex flex-col items-center relative" data-sign="cancer">

                        <img src="https://placehold.co/100x100/c0c0c0/ffffff?text=Cancer" alt="Cancer" class="avatar w-20 h-20">

                        <p class="mt-2 font-semibold text-sm">Cancer</p>

                        <button class="edit-zodiac-btn absolute top-0 right-0 bg-gray-700 p-1 rounded-full text-xs opacity-50 hover:opacity-100 transition-opacity">✏️</button>

                    </div>

                    <!-- Leo -->

                    <div class="flex flex-col items-center relative" data-sign="leo">

                        <img src="https://placehold.co/100x100/ff8c00/ffffff?text=Leo" alt="Leo" class="avatar w-20 h-20">

                        <p class="mt-2 font-semibold text-sm">Leo</p>

                        <button class="edit-zodiac-btn absolute top-0 right-0 bg-gray-700 p-1 rounded-full text-xs opacity-50 hover:opacity-100 transition-opacity">✏️</button>

                    </div>

                    <!-- Virgo -->

                    <div class="flex flex-col items-center relative" data-sign="virgo">

                        <img src="https://placehold.co/100x100/9acd32/ffffff?text=Virgo" alt="Virgo" class="avatar w-20 h-20">

                        <p class="mt-2 font-semibold text-sm">Virgo</p>

                        <button class="edit-zodiac-btn absolute top-0 right-0 bg-gray-700 p-1 rounded-full text-xs opacity-50 hover:opacity-100 transition-opacity">✏️</button>

                    </div>

                    <!-- Libra -->

                    <div class="flex flex-col items-center relative" data-sign="libra">

                        <img src="https://placehold.co/100x100/ff69b4/ffffff?text=Libra" alt="Libra" class="avatar w-20 h-20">

                        <p class="mt-2 font-semibold text-sm">Libra</p>

                        <button class="edit-zodiac-btn absolute top-0 right-0 bg-gray-700 p-1 rounded-full text-xs opacity-50 hover:opacity-100 transition-opacity">✏️</button>

                    </div>

                    <!-- Scorpio -->

                    <div class="flex flex-col items-center relative" data-sign="scorpio">

                        <img src="https://placehold.co/100x100/800000/ffffff?text=Scorpio" alt="Scorpio" class="avatar w-20 h-20">

                        <p class="mt-2 font-semibold text-sm">Scorpio</p>

                        <button class="edit-zodiac-btn absolute top-0 right-0 bg-gray-700 p-1 rounded-full text-xs opacity-50 hover:opacity-100 transition-opacity">✏️</button>

                    </div>

                    <!-- Sagittarius -->

                    <div class="flex flex-col items-center relative" data-sign="sagittarius">

                        <img src="https://placehold.co/100x100/4b0082/ffffff?text=Sagittarius" alt="Sagittarius" class="avatar w-20 h-20">

                        <p class="mt-2 font-semibold text-sm">Sagittarius</p>

                        <button class="edit-zodiac-btn absolute top-0 right-0 bg-gray-700 p-1 rounded-full text-xs opacity-50 hover:opacity-100 transition-opacity">✏️</button>

                    </div>

                    <!-- Capricorn -->

                    <div class="flex flex-col items-center relative" data-sign="capricorn">

                        <img src="https://placehold.co/100x100/696969/ffffff?text=Capricorn" alt="Capricorn" class="avatar w-20 h-20">

                        <p class="mt-2 font-semibold text-sm">Capricorn</p>

                        <button class="edit-zodiac-btn absolute top-0 right-0 bg-gray-700 p-1 rounded-full text-xs opacity-50 hover:opacity-100 transition-opacity">✏️</button>

                    </div>

                    <!-- Aquarius -->

                    <div class="flex flex-col items-center relative" data-sign="aquarius">

                        <img src="https://placehold.co/100x100/00bfff/ffffff?text=Aquarius" alt="Aquarius" class="avatar w-20 h-20">

                        <p class="mt-2 font-semibold text-sm">Aquarius</p>

                        <button class="edit-zodiac-btn absolute top-0 right-0 bg-gray-700 p-1 rounded-full text-xs opacity-50 hover:opacity-100 transition-opacity">✏️</button>

                    </div>

                    <!-- Pisces -->

                    <div class="flex flex-col items-center relative" data-sign="pisces">

                        <img src="https://placehold.co/100x100/4169e1/ffffff?text=Pisces" alt="Pisces" class="avatar w-20 h-20">

                        <p class="mt-2 font-semibold text-sm">Pisces</p>

                        <button class="edit-zodiac-btn absolute top-0 right-0 bg-gray-700 p-1 rounded-full text-xs opacity-50 hover:opacity-100 transition-opacity">✏️</button>

                    </div>

                </div>

            </div>



            <!-- Beat Purchase Section -->

            <div id="beat-purchase-section" class="card">

                <h2 class="text-2xl font-bold mb-4">Beats for Sale</h2>

                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">

                    <div class="bg-purple-800 p-4 rounded-lg flex flex-col justify-between">

                        <h3 class="font-bold text-xl">The Raydiant Beat</h3>

                        <p class="text-gray-300">A classic, hard-hitting MPC beat.</p>

                        <button id="purchase-beat-btn" class="mt-4 bg-lime-500 hover:bg-lime-600 text-white font-bold py-2 px-4 rounded-lg">

                            Purchase to Unlock

                        </button>

                    </div>

                </div>

            </div>



            <div id="studio-section">

                <div class="card">

                    <h2 class="text-2xl font-bold mb-4">AI ANTONIOS INTELIGENCE</h2>

                    <h3 class="text-lg text-gray-400">The AI Twin Pisces Ghost</h3>

                    <div class="mt-4">

                        <p id="beat-name" class="text-sm text-gray-400 mb-2">Now Playing: Not Loaded</p>

                        <video id="customPlayer" class="video-js vjs-default-skin w-full rounded-xl" controls preload="auto" data-setup='{}'></video>

                    </div>

                </div>



                <!-- GoodDGirl Waiting to Enter Section -->

                <div id="gooddgirl-status-section" class="good-d-girl-status">

                    <img id="baddgirl-avatar" class="avatar" src="https://placehold.co/150x150/7c3aed/ffffff?text=GoodDGirl" alt="GoodDGirl's Avatar">

                    <p class="mt-2 text-xl font-bold">GoodDGirl</p>

                    <span id="gooddgirl-status" class="badge status-waiting">Waiting to Enter...</span>

                    <button id="approve-gooddgirl-btn" class="mt-4 bg-lime-500 hover:bg-lime-600 text-white font-bold py-2 px-4 rounded-lg">

                        Approve GoodDGirl

                    </button>

                </div>



                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">

                    <!-- File Uploads and Master Purchase Section -->

                    <div class="card">

                        <h2 class="text-2xl font-bold mb-4">Record & Master</h2>

                        <div class="flex space-x-2 mt-4">

                            <button id="record-btn" class="flex-1 bg-red-600 hover:bg-red-700">Record</button>

                            <button id="stop-record-btn" class="flex-1 bg-gray-500 hover:bg-gray-600" disabled>Stop</button>

                        </div>

                        <div id="recording-playback" class="hidden mt-4">

                            <h3 class="text-md font-bold mb-2">Your Recording</h3>

                            <audio id="recording-player" controls class="w-full"></audio>

                            <a id="save-recording-btn" class="mt-2 block w-full bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-lg" download="my-recording.webm">Save Recording</a>

                        </div>

                        <div class="file-upload-container">

                            <label for="beat-upload">Upload Beat/Video</label>

                            <input type="file" id="beat-upload" accept="audio/*,video/mp4" class="hidden">

                        </div>

                        <p class="my-4 text-sm text-gray-300">Purchase the final master for distribution:</p>

                        <div class="grid grid-cols-1 sm:grid-cols-2 gap-2">

                            <button id="purchase-mp3-wav" class="bg-purple-600 hover:bg-purple-700">Buy Master MP3/WAV</button>

                            <button id="purchase-mp4" class="bg-pink-600 hover:bg-pink-700">Buy Master MP4 (Subscription)</button>

                        </div>

                        <img id="raydiant-seal" src="GERTIFIED AI SBM SEAL.jpg" alt="AI Certified SBM Seal" class="w-24 h-24 mx-auto mt-4" />

                    </div>

                </div>



                <p id="rhyme-guidance" class="card mt-6 text-lg text-gray-300">

                    Your creative energy is now aligned. Alter your rhymes to benefit the people, with the spirit of your sign.

                </p>

            </div>

           

            <!-- Chat Room for AI Correction -->

            <div id="chatroom-section" class="card">

                <h2 class="text-2xl font-bold mb-4">"The Raydiant War" (The AI Twin)</h2>

                <div class="chat-container mb-4" id="messages-display">

                    <!-- Chat messages will be rendered here -->

                </div>

                <form id="chat-form" class="flex space-x-2">

                    <input type="text" id="chat-input" placeholder="Drop your rhyme here..." class="flex-grow p-3 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 bg-gray-700">

                    <button id="generate-rhyme-btn" type="button" class="bg-purple-600 hover:bg-purple-700 text-white font-bold py-2 px-4 rounded-lg">✨ Generate Rhyme</button>

                    <button type="submit" class="bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-lg">Send</button>

                </form>

            </div>

        </div>

    </main>



    <!-- Edit Zodiac Modal -->

    <div id="edit-zodiac-modal" class="hidden fixed inset-0 bg-black bg-opacity-70 flex justify-center items-center z-50">

        <div class="p-6 rounded-lg max-w-sm w-full card">

            <h3 id="modal-title" class="text-xl font-bold mb-4">Edit Council Member</h3>

            <form id="edit-zodiac-form">

                <input type="hidden" id="editing-sign-id">

                <div>

                    <label for="zodiac-name-input" class="block mb-2 text-sm font-medium">Name</label>

                    <input type="text" id="zodiac-name-input" required>

                </div>

                <div class="mt-4">

                    <label for="zodiac-image-input" class="block mb-2 text-sm font-medium">Picture</label>

                    <input type="file" id="zodiac-image-input" accept="image/*" class="w-full text-sm text-gray-400 file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-purple-50 file:text-purple-700 hover:file:bg-purple-100">

                </div>

                <div class="mt-6 flex justify-end space-x-2">

                    <button type="button" id="cancel-edit-btn" class="bg-gray-600 hover:bg-gray-700">Cancel</button>

                    <button type="submit" class="bg-blue-600 hover:bg-blue-700">Save</button>

                </div>

            </form>

        </div>

    </div>



    <!-- Message Box -->

    <div id="message-box" class="message-box">

        <p id="message-text"></p>

        <button id="close-message" class="mt-4 px-4 py-2 rounded-lg bg-purple-600">OK</button>

    </div>



    <!-- Firebase SDKs -->

    <script type="module">

        import { initializeApp } from "https://www.gstatic.com/firebasejs/11.6.1/firebase-app.js";

        import { getAuth, signInAnonymously, signInWithCustomToken, onAuthStateChanged } from "https://www.gstatic.com/firebasejs/11.6.1/firebase-auth.js";

        import { getFirestore, doc, setDoc, onSnapshot, collection, addDoc, serverTimestamp, query, orderBy } from "https://www.gstatic.com/firebasejs/11.6.1/firebase-firestore.js";

        import { setLogLevel } from "https://www.gstatic.com/firebasejs/11.6.1/firebase-firestore.js";



        setLogLevel('Debug');



        // Global Firebase variables

        const firebaseConfig = JSON.parse(typeof __firebase_config !== 'undefined' ? __firebase_config : '{}');

        const appId = typeof __app_id !== 'undefined' ? __app_id : 'default-app-id';

        const initialAuthToken = typeof __initial_auth_token !== 'undefined' ? __initial_auth_token : null;

       

        let db, auth;

        let userId;

        let localStream; // To hold the camera stream



        // Recording variables

        let mediaRecorder;

        let audioChunks = [];

        let audioBlob;



        // Utility function to show a custom message box instead of alert()

        function showMessage(message) {

            document.getElementById('message-text').textContent = message;

            document.getElementById('message-box').style.display = 'block';

        }



        document.addEventListener('DOMContentLoaded', () => {

            // Get elements

            const userAvatar = document.getElementById('user-avatar');

            const generateAvatarBtn = document.getElementById('generate-avatar-btn');

            const appContent = document.getElementById('app-content');

            const userIdDisplay = document.getElementById('user-id-display');

            const localVideo = document.getElementById('localVideo');

            const customPlayer = videojs('customPlayer');

            const purchaseBeatBtn = document.getElementById('purchase-beat-btn');

            const beatNameDisplay = document.getElementById('beat-name');

            const messagesDisplay = document.getElementById('messages-display');

            const chatForm = document.getElementById('chat-form');

            const chatInput = document.getElementById('chat-input');

            const generateRhymeBtn = document.getElementById('generate-rhyme-btn');

            const gooddgirlStatus = document.getElementById('gooddgirl-status');

            const approveGooddgirlBtn = document.getElementById('approve-gooddgirl-btn');

            const recordBtn = document.getElementById('record-btn');

            const stopRecordBtn = document.getElementById('stop-record-btn');

            const recordingPlayback = document.getElementById('recording-playback');

            const recordingPlayer = document.getElementById('recording-player');

            const saveRecordingBtn = document.getElementById('save-recording-btn');

           

            // Zodiac editing modal elements

            const editZodiacModal = document.getElementById('edit-zodiac-modal');

            const editZodiacForm = document.getElementById('edit-zodiac-form');

            const cancelEditBtn = document.getElementById('cancel-edit-btn');

            const zodiacNameInput = document.getElementById('zodiac-name-input');

            const zodiacImageInput = document.getElementById('zodiac-image-input');

            const editingSignIdInput = document.getElementById('editing-sign-id');

            const zodiacSection = document.getElementById('zodiac-section');





            // Close message box

            document.getElementById('close-message').addEventListener('click', () => {

                document.getElementById('message-box').style.display = 'none';

            });

           

            // Initialize Firebase on page load

            if (Object.keys(firebaseConfig).length) {

                const app = initializeApp(firebaseConfig);

                db = getFirestore(app);

                auth = getAuth(app);

               

                onAuthStateChanged(auth, async (user) => {

                    if (!user) {

                        try {

                            if (initialAuthToken) {

                                await signInWithCustomToken(auth, initialAuthToken);

                            } else {

                                await signInAnonymously(auth);

                            }

                        } catch (error) {

                            console.error("Firebase Auth Error:", error);

                        }

                    }

                    userId = auth.currentUser?.uid || crypto.randomUUID();

                    if(userIdDisplay) userIdDisplay.textContent = userId;

                    setupRealtimeListeners();

                });

            }



            function setupRealtimeListeners() {

                if (!userId || !db) return;

                loadAndRenderZodiacData(); // Load zodiac customizations

                // Listen for user's beat purchases

                const userPurchaseDoc = doc(db, 'artifacts', appId, 'users', userId, 'purchases', 'beat_purchase');

                onSnapshot(userPurchaseDoc, (docSnap) => {

                    if (docSnap.exists()) {

                        console.log("Beat purchased. Studio unlocked.");

                    } else {

                        console.log("Beat not purchased. Studio locked.");

                    }

                }, (error) => {

                    console.error("Error fetching purchase data:", error);

                });



                // Listen for chat messages from the public collection

                const chatCollection = collection(db, 'artifacts', appId, 'public', 'data', 'conversations');

                const chatQuery = query(chatCollection, orderBy('timestamp'));

               

                onSnapshot(chatQuery, (snapshot) => {

                    messagesDisplay.innerHTML = '';

                    snapshot.forEach(doc => {

                        const message = doc.data();

                        const messageContainer = document.createElement('div');

                        messageContainer.classList.add('chat-message');



                        const messageText = document.createElement('span');

                        messageText.textContent = message.text;

                        messageContainer.appendChild(messageText);



                        if (message.sender === 'user') {

                            messageContainer.classList.add('user-message');

                        } else {

                            messageContainer.classList.add('ai-message');

                            const ttsButton = document.createElement('button');

                            ttsButton.innerHTML = '🔊'; // Speaker icon

                            ttsButton.classList.add('tts-button', 'ml-2', 'p-1', 'text-sm', 'rounded-full', 'bg-purple-600', 'hover:bg-purple-700', 'flex-shrink-0');

                            ttsButton.style.width = '2rem';

                            ttsButton.style.height = '2rem';

                            ttsButton.dataset.text = message.text;

                            messageContainer.appendChild(ttsButton);

                        }

                        messagesDisplay.appendChild(messageContainer);

                    });

                    messagesDisplay.scrollTop = messagesDisplay.scrollHeight;

                }, (error) => {

                    console.error("Error fetching chat messages:", error);

                });



                // Listen for GoodDGirl status

                const gooddgirlStatusDoc = doc(db, 'artifacts', appId, 'public', 'data', 'app_status', 'gooddgirl');

                onSnapshot(gooddgirlStatusDoc, (docSnap) => {

                    if (docSnap.exists() && docSnap.data().approved) {

                        gooddgirlStatus.textContent = 'Approved!';

                        gooddgirlStatus.classList.remove('status-waiting');

                        gooddgirlStatus.classList.add('status-approved');

                        approveGooddgirlBtn.disabled = true;

                        approveGooddgirlBtn.textContent = 'Approved';

                        approveGooddgirlBtn.classList.remove('bg-lime-500', 'hover:bg-lime-600');

                        approveGooddgirlBtn.classList.add('bg-gray-500', 'cursor-not-allowed');

                    } else {

                        gooddgirlStatus.textContent = 'Waiting to Enter...';

                        gooddgirlStatus.classList.remove('status-approved');

                        gooddgirlStatus.classList.add('status-waiting');

                        approveGooddgirlBtn.disabled = false;

                        approveGooddgirlBtn.textContent = 'Approve GoodDGirl';

                        approveGooddgirlBtn.classList.add('bg-lime-500', 'hover:bg-lime-600');

                        approveGooddgirlBtn.classList.remove('bg-gray-500', 'cursor-not-allowed');

                    }

                }, (error) => {

                    console.error("Error fetching GoodDGirl status:", error);

                });

            }



            function loadAndRenderZodiacData() {

                const zodiacElements = document.querySelectorAll('[data-sign]');

                zodiacElements.forEach(element => {

                    const signId = element.dataset.sign;

                    if (!signId) return;



                    const zodiacDocRef = doc(db, 'artifacts', appId, 'public', 'data', 'zodiac_council', signId);

                    onSnapshot(zodiacDocRef, (docSnap) => {

                        if (docSnap.exists()) {

                            const data = docSnap.data();

                            const nameEl = element.querySelector('p');

                            const imgEl = element.querySelector('img');

                           

                            if (data.name && nameEl) {

                                nameEl.textContent = data.name;

                            }